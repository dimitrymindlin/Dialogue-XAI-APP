# User provided prediction model file path
ExplainBot.model_file_path = "./data/adult/adult_model_rf.pkl"
ExplainBot.encoded_col_mapping_path = "./data/adult/encoded_col_mapping.json"
ExplainBot.categorical_mapping_path = "./data/adult/categorical_mapping.json"
ExplainBot.background_dataset_file_path = "./data/adult/adult_train.csv"
ExplainBot.dataset_file_path = "./data/adult/adult_test.csv"

ExplainBot.name = "adult census dataset"

# Seed
ExplainBot.seed = 0


# Dataset feature information
ExplainBot.dataset_index_column = 0
ExplainBot.instance_type_naming = "Person"
ExplainBot.target_variable_name = "Income"
ExplainBot.categorical_features = ['MaritalStatus', 'InvestmentOutcome', 'EducationLevel', 'Occupation', 'WorkLifeBalance']
ExplainBot.ordinary_features = ['InvestmentOutcome','EducationLevel', 'WorkLifeBalance']
ExplainBot.numerical_features = ['Age', 'WeeklyWorkingHours']
ExplainBot.remove_underscores = True
ExplainBot.actionable_features = ["InvestmentOutcome", "EducationLevel", "Occupation"]
ExplainBot.feature_ordering = ['Age', 'Education Level', 'Marital Status', 'Occupation', 'Weekly Working Hours', 'Work Life Balance', 'Investment Outcome']
ExplainBot.use_intent_recognition = "openAI" # "openAI" or "ollama"
ExplainBot.use_active_dialogue_manager = False
ExplainBot.use_llm_agent = "mape_k" # one of False, "simple", "mape_k", "o1"

# Experiment Helper
ExperimentHelper.actionable_features = ['Age', 'EducationLevel', 'MaritalStatus', 'Occupation', 'WeeklyWorkingHours', 'InvestmentOutcome']


# Explanation Params
Explanation.max_cache_size = 1_000_000

# MegaExplainer Params
MegaExplainer.cache_location = "./cache/adult-mega-explainer-tabular.pkl"
MegaExplainer.use_selection = False
MegaExplainer.use_tree_shap = True

# Tabular Dice Params
TabularDice.cache_location = "./cache/adult-dice-tabular.pkl"
TabularDice.final_cfe_amount = 3

# Diverse Instances
DiverseInstances.cache_location = "./cache/adult-diverse-instances.pkl"
DiverseInstances.instance_amount = 20
DiverseInstances.dataset_name = "adult"

# Test Instances
TestInstances.cache_location = "./cache/adult-test-instances.pkl"
TestInstances.max_features_to_vary = 2
TestInstances.instance_amount = 20

# Ceteris Paribus
CeterisParibus.cache_location = "./cache/adult-ceteris-paribus.pkl"
PdpExplanation.cache_location = "./cache/adult-pdp.pkl"

# Tabular Anchor Params
TabularAnchor.cache_location = "./cache/adult-anchor-tabular.pkl"

# Conversation params
Conversation.class_names = {0: "under 50k", 1: "over 50k"}
Conversation.question_bank_path =  "./data/question_bank.csv"

# Dataset description
DatasetDescription.dataset_objective = "Predict whether an individual earns more than 50k a years or less."
## Dataset description for context for llm agent
DatasetDescription.dataset_description = "Adult Census Income Dataset, commonly used for binary classification tasks in machine learning. The goal is to predict whether an individualâ€™s income exceeds $50K/year based on demographic and employment-related features. It is based on US Census data and is often used to explore income distribution patterns, discrimination, or bias in predictive models."
DatasetDescription.model_description = "random forest model"
DatasetDescription.user_study_objective = "guess the model's prediction for the shown individual"

# Feature Tooltip
ExplainBot.feature_tooltip_mapping = {
    "age": "The individual's age, in years.",
    "education level": "Highest level of education attained by the individual, categorized as: Dropout, High School grad, Associates, Bachelors grad, Masters grad, Professional Degree or Doctorate/Prof Level.",
    "weekly working hours": "The total number of hours the individual works in a typical week.",
    "marital status": "The individual's marital status, indicating whether they are Married or Single. This simplification may encompass a broader range of legal statuses.",
    "work life balance": "A self-reported assessment of the individual's work-life balance, ranging from poor to excellent. This subjective measure reflects the individual's satisfaction with their ability to balance work and personal life.",
    "occupation": "The category of the individual's occupation, such as Admin (Administrative and clerical roles: office clerks and secretaries), Military (Personnel serving in the army), Blue-Collar (Manual labor occupations: craft workers, machine operators, farmers, handlers, cleaners), White-Collar (Executive and managerial positions involving strategic planning), Professional (Specialized professions requiring advanced education: doctors, lawyers, engineers, and educators), Sales (Roles related to selling products or services: sales representatives, retail personnel), Service (Occupations providing services to individuals or communities: protective services e.g., law enforcement officers, firefighters, technical support)","workclass": "The work class of the person: Government, Private Sector, Self-Employed / Entrepreneurial, Unemployed and Other.",
    "investment outcome": "The result of the individual's investment activities, categorized as: No investment, Loss, or Gain. This reflects whether the individual has investments and if so, whether they have made a profit or a loss."
}

# Feature Units
ExplainBot.feature_units_mapping = {
    "age": "years",
    "education": "",
    "gender": "",
    "weekly working hours": "hours",
    "marital status": "",
    "work life balance": "",
    "occupation": "",
    "workclass": "",
    "investment outcome": ""
}